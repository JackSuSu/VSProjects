#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18444
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace MVCFirst
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="TestDb")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void InsertTbUser(TbUser instance);
    partial void UpdateTbUser(TbUser instance);
    partial void DeleteTbUser(TbUser instance);
    partial void InsertTbGroup(TbGroup instance);
    partial void UpdateTbGroup(TbGroup instance);
    partial void DeleteTbGroup(TbGroup instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["TestDbConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<TbUser> TbUser
		{
			get
			{
				return this.GetTable<TbUser>();
			}
		}
		
		public System.Data.Linq.Table<TbGroup> TbGroup
		{
			get
			{
				return this.GetTable<TbGroup>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TbUser")]
	public partial class TbUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UId;
		
		private string _UName;
		
		private string _UPwd;
		
		private int _UGId;
		
		private EntityRef<TbGroup> _TbGroup;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUIdChanging(int value);
    partial void OnUIdChanged();
    partial void OnUNameChanging(string value);
    partial void OnUNameChanged();
    partial void OnUPwdChanging(string value);
    partial void OnUPwdChanged();
    partial void OnUGIdChanging(int value);
    partial void OnUGIdChanged();
    #endregion
		
		public TbUser()
		{
			this._TbGroup = default(EntityRef<TbGroup>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UId
		{
			get
			{
				return this._UId;
			}
			set
			{
				if ((this._UId != value))
				{
					this.OnUIdChanging(value);
					this.SendPropertyChanging();
					this._UId = value;
					this.SendPropertyChanged("UId");
					this.OnUIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UName", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string UName
		{
			get
			{
				return this._UName;
			}
			set
			{
				if ((this._UName != value))
				{
					this.OnUNameChanging(value);
					this.SendPropertyChanging();
					this._UName = value;
					this.SendPropertyChanged("UName");
					this.OnUNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UPwd", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string UPwd
		{
			get
			{
				return this._UPwd;
			}
			set
			{
				if ((this._UPwd != value))
				{
					this.OnUPwdChanging(value);
					this.SendPropertyChanging();
					this._UPwd = value;
					this.SendPropertyChanged("UPwd");
					this.OnUPwdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UGId", DbType="Int NOT NULL")]
		public int UGId
		{
			get
			{
				return this._UGId;
			}
			set
			{
				if ((this._UGId != value))
				{
					if (this._TbGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUGIdChanging(value);
					this.SendPropertyChanging();
					this._UGId = value;
					this.SendPropertyChanged("UGId");
					this.OnUGIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TbGroup_TbUser", Storage="_TbGroup", ThisKey="UGId", OtherKey="GId", IsForeignKey=true)]
		public TbGroup TbGroup
		{
			get
			{
				return this._TbGroup.Entity;
			}
			set
			{
				TbGroup previousValue = this._TbGroup.Entity;
				if (((previousValue != value) 
							|| (this._TbGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TbGroup.Entity = null;
						previousValue.TbUser.Remove(this);
					}
					this._TbGroup.Entity = value;
					if ((value != null))
					{
						value.TbUser.Add(this);
						this._UGId = value.GId;
					}
					else
					{
						this._UGId = default(int);
					}
					this.SendPropertyChanged("TbGroup");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TbGroup")]
	public partial class TbGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GId;
		
		private string _GName;
		
		private EntitySet<TbUser> _TbUser;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGIdChanging(int value);
    partial void OnGIdChanged();
    partial void OnGNameChanging(string value);
    partial void OnGNameChanged();
    #endregion
		
		public TbGroup()
		{
			this._TbUser = new EntitySet<TbUser>(new Action<TbUser>(this.attach_TbUser), new Action<TbUser>(this.detach_TbUser));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int GId
		{
			get
			{
				return this._GId;
			}
			set
			{
				if ((this._GId != value))
				{
					this.OnGIdChanging(value);
					this.SendPropertyChanging();
					this._GId = value;
					this.SendPropertyChanged("GId");
					this.OnGIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GName", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string GName
		{
			get
			{
				return this._GName;
			}
			set
			{
				if ((this._GName != value))
				{
					this.OnGNameChanging(value);
					this.SendPropertyChanging();
					this._GName = value;
					this.SendPropertyChanged("GName");
					this.OnGNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TbGroup_TbUser", Storage="_TbUser", ThisKey="GId", OtherKey="UGId")]
		public EntitySet<TbUser> TbUser
		{
			get
			{
				return this._TbUser;
			}
			set
			{
				this._TbUser.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TbUser(TbUser entity)
		{
			this.SendPropertyChanging();
			entity.TbGroup = this;
		}
		
		private void detach_TbUser(TbUser entity)
		{
			this.SendPropertyChanging();
			entity.TbGroup = null;
		}
	}
}
#pragma warning restore 1591
